;; Linux
;; Set up package.el to work with MELPA

;; AntiX
;(setq gnutls-algorithm-priority "NORMAL:-VERS-TLS1.3")

(package-initialize)

(require 'package)
(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/"))
;(add-to-list 'package-archives '("melpa-stable" . "https://stable.melpa.org/packages/"))

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-faces-vector
   [default default default italic underline success warning error])
 '(ansi-color-names-vector
   ["#2e3436" "#a40000" "#4e9a06" "#c4a000" "#204a87" "#5c3566" "#729fcf" "#eeeeec"])
 '(custom-enabled-themes '(deeper-blue))
 '(display-line-numbers-type 'relative)
 '(global-display-line-numbers-mode t)
 '(inhibit-startup-screen t)
 '(org-export-backends '(ascii html icalendar latex md odt))
 '(package-selected-packages
   '(neotree markdown-mode smex evil company ace-window general))
 '(show-paren-mode t))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:family "Source Code Pro" :foundry "ADBO" :slant normal :weight normal :height 151 :width normal)))))

;(add-to-list 'load-path "~/Project/ITHelp/SampleCode/Emacs/evil")

;; Enable Evil
(require 'evil)
(evil-mode 1)

;; Enable line-numbers
(global-display-line-numbers-mode 1)
(setq display-line-numbers-type 'relative)

(global-hl-line-mode 1)

(electric-pair-mode t)
(show-paren-mode t)

(cua-mode t)

;; smex
(require 'smex)
(smex-initialize)

;; company
(require 'company)
(global-company-mode 1)

;; ido
(require 'ido)
(ido-mode t)

;; ace-window
(require 'ace-window)
(ace-window t)
(global-set-key (kbd "M-o") 'ace-window)

(setq backup-directory-alist (quote (("." . "~/.emacs-backups"))))

(org-babel-do-load-languages
  'org-babel-load-languages
  '((python . t)))

;; Customer function
(defun open-init-file ()
  (interactive)
  (find-file "~/.emacs.d/init.el"))

(global-set-key (kbd "<f2>") 'open-init-file)
(global-set-key (kbd "<f3>") 'split-window-below)
(global-set-key (kbd "<f4>") 'split-window-horizontally)
 

;;(general-define-key
;;:keymaps 'override
;;:prefix "SPC"
;;"SPC" 'execute-extended-command
;;;"h" 'help-at-pt
;;;; file
;;"ff" 'find-file

;;;; dired
;;;"dj" dired-jump
;;"bb" 'switch-to-buffer
;;"bB" 'switch-to-buffer-other-window
;;"kb" 'kill-buffer
;;"-" 'split-window-horizontally
;;"/" 'split-window-vertically
;;)
